{"version":3,"file":"static/js/304.207326b8.chunk.js","mappings":"8NAGaA,EAAYC,EAAAA,EAAAA,GAAH,0RAiBTC,GAJcD,EAAAA,EAAAA,GAAH,0BAIGA,EAAAA,EAAAA,IAAH,wSAeXE,GAAcF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,8CAGXI,EAAaJ,EAAAA,EAAAA,IAAH,wCAIVK,EAAaL,EAAAA,EAAAA,EAAH,mE,mBCnCVM,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACtBC,GAAWC,EAAAA,EAAAA,MAGb,OACI,SAACV,EAAD,UACKQ,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,YAAnB,OACR,0BACI,SAACZ,EAAD,CAAaa,GAAE,0CAAqCJ,GAAMK,MAAO,CAAEC,KAAMT,GAAzE,UACI,UAACP,EAAD,YACI,SAACG,EAAD,CAAYc,IACRJ,EAAW,yCAC6BA,GAClCK,EAAUC,IAAKP,KACzB,SAACR,EAAD,UAAaQ,GAASD,UAPxBD,EADF,KAiBvB,C,gKC5BYU,E,QAAQrB,EAAAA,GAAH,mE,SC+BlB,MA1BA,WAEI,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACN,mCAAC,8GAE6BC,EAAAA,EAAAA,IAAc,GAF3C,OAEOC,EAFP,OAICH,GAAU,OAAIG,EAAcC,UAJ7B,gDAODC,QAAQC,IAAI,KAAMC,SAASC,MAP1B,yDAAD,sDAUH,GAAE,KAGD,iCACE,SAACV,EAAD,kCACA,SAACf,EAAA,EAAD,CAAYC,OAAQA,MAI3B,C,kMC7BDyB,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCACVC,EACQ,sBADRA,EAEO,SAFPA,EAGM,eAHNA,EAIO,WAJPA,EAKO,WAGN,SAAeT,IAAtB,4CAAO,OAAP,oBAAO,oGACoBO,EAAAA,GAAAA,IAAA,WAAcE,EAAd,oBAAyCD,IAD7D,cACGH,EADH,yBAEEA,EAASC,MAFX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,uFAEkBqB,EAAAA,GAAAA,IAAA,iBACXrB,EADW,oBACGsB,EADH,oBAFlB,cAECH,EAFD,yBAKEA,EAASC,MALX,kEASA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAAkCC,EAAOC,GAAzC,uFACkBN,EAAAA,GAAAA,IAAA,WACjBE,EADiB,oBACQD,EADR,kBACyBI,EADzB,gCACsDC,EADtD,yBADlB,cACCR,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAyB5B,GAAzB,uFACkBqB,EAAAA,GAAAA,IAAA,WACjBE,GADiB,OACAvB,GADA,OACKuB,EADL,oBAC+BD,EAD/B,oBADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kEASA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,uFACkBqB,EAAAA,GAAAA,IAAA,WACjBE,GADiB,OACAvB,GADA,OACKuB,EADL,oBAC+BD,EAD/B,oBADlB,cACCH,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/fetch.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\n display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const GalleryItem = styled.li`\n\n`;\n\nexport const CardWrapper = styled.div`\n  padding: 10px;\n  /* border: 1px solid black; */\n  height: 95%;\n   box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n  \n\n  :hover {\n    transition: all 0.2s ease-in-out;\n   \n    scale: 103%;\n  }\n  \n`;\n\nexport const GalleryLink = styled(Link)`\ntext-decoration: none;`;\n\nexport const GalleryImg = styled.img`\n  width: 100%;\n`;\n\nexport const MovieTitle = styled.p`\ntext-transform: uppercase;\ncolor: black;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { Container, CardWrapper, GalleryLink, GalleryImg, MovieTitle } from \"./MoviesList.styled\";\nimport noPoster from './noPoster.jpg';\n\n\nexport const MoviesList = ({movies}) => {\nconst location = useLocation();\n// console.log(location)\n\n    return (\n        <Container>\n            {movies.map(({id, name, title, poster_path}) => (\n                <div key={id}>\n                    <GalleryLink to={`/goit-react-hw-05-movies/movies/${id}`} state={{ from: location }}>\n                        <CardWrapper>\n                            <GalleryImg src={\n                                poster_path\n                                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                                    : noPoster} alt={title} />\n                            <MovieTitle>{title || name}</MovieTitle>\n                        </CardWrapper>\n                        </GalleryLink>\n                    \n                </div>            \n    ))}\n        </Container>\n\n    )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  )\n};","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  text-align: center;\n`;","import { useState, useEffect } from \"react\";\n\nimport { fetchTrending } from 'services/fetch';\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\nimport { Title } from './Home.styled';\n\n\nfunction TrendingMovies() {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        (async function addMovies() {\n      try {\n          const fetchedTrends = await fetchTrending(1);\n          // console.log(fetchedTrends);\n          setMovies([...fetchedTrends.results]);\n      } catch (error) {\n      \n        console.log(error.response.data)\n      }\n    })();\n    }, [])\n\n    return (\n      <>\n        <Title>Trending this week</Title>\n        <MoviesList movies={movies} />\n      </>\n       \n    )\n}\n\nexport default TrendingMovies;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = '2402629cc235e448b11efcecffc11c17';\nconst params = {\n    trending: 'trending/movie/week',\n    movieID: 'movie/',\n    search: 'search/movie',\n    credits: '/credits',\n    reviews: '/reviews'\n}\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/${params.trending}?api_key=${api_key}`);\n  return response.data;\n  };\n\n\n\nexport async function fetchMovieByID(id) {\n\n  const response = await axios.get(\n    `/movie/${id}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `/${params.search}?api_key=${api_key}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n}\n\n\nexport async function fetchCast(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.credits}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.reviews}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}"],"names":["Container","styled","CardWrapper","GalleryLink","Link","GalleryImg","MovieTitle","MoviesList","movies","location","useLocation","map","id","name","title","poster_path","to","state","from","src","noPoster","alt","Title","useState","setMovies","useEffect","fetchTrending","fetchedTrends","results","console","log","response","data","axios","api_key","params","fetchMovieByID","fetchMoviesByQuery","query","page","fetchCast","fetchReviews"],"sourceRoot":""}