{"version":3,"file":"static/js/763.4623834b.chunk.js","mappings":"yTAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,yI,SCEVE,EAAW,SAAC,GAAqB,EAAnBC,GAAoB,IAAD,IAAfC,EAAe,EAAfA,SACvBC,GAAWC,EAAAA,EAAAA,MAEf,OACA,SAACP,EAAD,CAAYI,GAAE,iBAAEE,QAAF,IAAEA,GAAF,UAAEA,EAAUE,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAzC,SACGJ,GAGN,ECTYK,EAAYT,EAAAA,EAAAA,IAAH,2JAgBTU,IANOV,EAAAA,EAAAA,GAAOE,EAAPF,CAAH,gFAMMA,EAAAA,EAAAA,KAAH,8XAiBPW,EAAcX,EAAAA,EAAAA,IAAH,oHAOXY,EAAYZ,EAAAA,EAAAA,IAAH,mHAOTa,EAAeb,EAAAA,EAAAA,GAAH,0FAMZc,EAAUd,EAAAA,EAAAA,GAAH,mEAKPe,EAAcf,EAAAA,EAAAA,GAAH,kGAMXgB,GAAchB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAH,8TAoBXkB,EAAalB,EAAAA,EAAAA,IAAH,kG,SCbvB,MAlEA,WAAyB,IAAD,IACZmB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMpB,GAAWC,EAAAA,EAAAA,MAEXoB,EAAY,oBAAGrB,EAASE,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,4BAkB7C,OAhBAmB,EAAAA,EAAAA,YAAU,YACN,mCAAC,8GAE2BC,EAAAA,EAAAA,IAAeT,GAF1C,OAEaU,EAFb,OAION,EAAaM,GAJpB,gDAMOC,QAAQC,IAAI,KAAMC,SAASC,MAC3BR,EAAS,KAAMO,SAASC,KAAKC,gBAPpC,yDAAD,sDAYH,GAAE,CAACf,KAIA,UAACV,EAAD,YACI,SAACP,EAAD,CAAUC,GAAIuB,EAAd,kBACCF,IAAU,SAACN,EAAD,UACNM,IAEJF,IACG,UAACZ,EAAD,YACI,SAACE,EAAD,CAAWuB,IAAKb,EAAUc,YAAV,yCAC4Bd,EAAUc,aAC5CC,EAAUC,IAAKhB,EAAUiB,SACnC,UAAC5B,EAAD,YACQ,kCAAQW,EAAUiB,MAAlB,aAA4BjB,EAAUkB,aAAaC,MAAM,EAAG,GAA5D,QACA,6CAAmBC,OAAOC,SAAkC,GAAzBrB,EAAUsB,cAA7C,QACA,sCACA,uBAAItB,EAAUuB,YACd,oCACA,uBAAIvB,EAAUwB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,IAAyBC,KAAK,cAG5D,KAAVzB,IAAiB,4BACV,SAACX,EAAD,sCACA,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAab,GAAG,OAAOI,MAAOF,EAASE,MAAvC,mBAGA,SAACS,EAAD,CAAab,GAAG,SAASI,MAAOF,EAASE,MAAzC,yBAKV,SAAC,EAAA2C,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,cAOf,C,kMCxEDC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCACVC,EACQ,sBADRA,EAEO,SAFPA,EAGM,eAHNA,EAIO,WAJPA,EAKO,WAGN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBH,EAAAA,GAAAA,IAAA,WAAcE,EAAd,oBAAyCD,IAD7D,cACGtB,EADH,yBAEEA,EAASC,MAFX,kEAOA,SAAeL,EAAtB,+CAAO,OAAP,oBAAO,WAA8B6B,GAA9B,uFAEkBJ,EAAAA,GAAAA,IAAA,iBACXI,EADW,oBACGH,EADH,oBAFlB,cAECtB,EAFD,yBAKEA,EAASC,MALX,kEASA,SAAeyB,EAAtB,iDAAO,OAAP,oBAAO,WAAkCC,EAAOC,GAAzC,uFACkBP,EAAAA,GAAAA,IAAA,WACjBE,EADiB,oBACQD,EADR,kBACyBK,EADzB,gCACsDC,EADtD,yBADlB,cACC5B,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,uFACkBJ,EAAAA,GAAAA,IAAA,WACjBE,GADiB,OACAE,GADA,OACKF,EADL,oBAC+BD,EAD/B,oBADlB,cACCtB,EADD,yBAIEA,EAASC,MAJX,kEASA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,uFACkBJ,EAAAA,GAAAA,IAAA,WACjBE,GADiB,OACAE,GADA,OACKF,EADL,oBAC+BD,EAD/B,oBADlB,cACCtB,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/BackLnk/BackLink.styled.js","components/BackLnk/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetch.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;","import { useLocation } from 'react-router-dom';\n\nimport { StyledLink } from './BackLink.styled';\n\n\nexport const BackLink = ({ to, children }) => {\n  const location = useLocation();\n  \n    return (\n    <StyledLink to={location?.state?.from ?? '/'}>\n      {children}\n    </StyledLink>\n  );\n};","import styled from \"@emotion/styled\";\nimport { BackLink } from \"../../components/BackLnk/BackLink\";\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n/* margin: 0 220px; */\n/* padding: 0 250px; */\n/* width: 100%;\n@media screen and (max-width: 320px){\n    padding: 20px;\n} */\n`;\n\n\nexport const Back = styled(BackLink)`\nposition: relative;\nleft: 200px;\nmargin-left: 200px;\n`;\n\nexport const Wrapper = styled.main`\n\nmax-width: 800px;\ndisplay: flex;\nmargin: 0 auto;\npadding: 40px 0px;\nmargin-top: 20px;\njustify-content: center;\ngap: 40px;\n box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n@media screen and (max-width: 425px){\n    flex-direction: column;\n    padding: 20px;\n    margin-top: 20px;\n}\n`;\n\nexport const InfoWrapper = styled.div`\n    width: 333px;\n    @media screen and (max-width: 320px){\n        width: 280px;\n    }\n`;\n\nexport const PosterImg = styled.img`\n    height: 500px;\n    @media screen and (max-width: 320px){\n        height:90%;\n    }\n`;\n\nexport const AddInfoTitle = styled.h2`\n  font-size: 18px;\n  text-align: center;\n    margin-top: 40px;\n`;\n\nexport const AddInfo = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n`;\n\nexport const AddInfoItem = styled.li`\n  /* margin-top: 40px; */\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nexport const AddInfoLink = styled(NavLink)`\n /* margin-right: 10px; */\ntext-transform: uppercase;\ntext-decoration: none;\nfont-weight: 700;\nfont-size: 1rem;\ncolor: black;\n/* text-align: center; */\nmargin-right: 5px;\nmargin-left: 5px;\n:hover{\n    color: brown;\n}\n\n&.active {\n    /* composes: link; */\n    color: brown;\n  }\n`;\n\nexport const ErrorTitle = styled.div`\n    margin-top: 30px;\n    margin-bottom: 30px;\n    text-align: center;\n`;","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\n\nimport { fetchMovieByID } from \"services/fetch\";\nimport noPoster from '../../components/MoviesList/noPoster.jpg';\nimport { BackLink } from \"components/BackLnk/BackLink\";\nimport { Wrapper, InfoWrapper, PosterImg, Container, AddInfoTitle, AddInfo, AddInfoItem, AddInfoLink, ErrorTitle } from \"./MovieDetails.styled\";\nimport { Loading } from \"components/Loading/Loading\";\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [error, setError] = useState('');\n\n    const location = useLocation();\n    // console.log(location);\n    const backLinkHref = location.state?.from ?? \"/goit-react-hw-05-movies/\";\n\n    useEffect(() => {\n        (async function showMovieDetails() {\n            try {\n                const movie = await fetchMovieByID(movieId);\n                // console.log(movie);\n                setMovieInfo(movie);\n            } catch (error) {\n                console.log(error.response.data)\n                setError(error.response.data.status_message);\n            }\n        })();\n      \n    \n    }, [movieId]);\n    \n\n    return (\n        <Container>\n            <BackLink to={backLinkHref}>Back</BackLink>\n            {error && (<ErrorTitle>\n                {error}\n            </ErrorTitle>)}\n            {movieInfo && (   \n                <Wrapper>\n                    <PosterImg src={movieInfo.poster_path\n                            ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n                            : noPoster} alt={movieInfo.title} />\n                    <InfoWrapper>\n                            <h2>{`${movieInfo.title} (${movieInfo.release_date.slice(0, 4)})`}</h2>\n                            <p>{`User score: ${Number.parseInt(movieInfo.vote_average * 10)}%`}</p>\n                            <h3>Overview</h3>\n                            <p>{movieInfo.overview}</p>\n                            <h3>Genres</h3>\n                            <p>{movieInfo.genres.map(({ name }) => `${name}`).join(', ')}</p>\n                    </InfoWrapper>\n                </Wrapper>)}\n            {error === '' && (<div>\n                    <AddInfoTitle>Additional information</AddInfoTitle>\n                    <AddInfo>\n                      <AddInfoItem>\n                        <AddInfoLink to=\"cast\" state={location.state}>\n                           Cast\n                        </AddInfoLink>\n                        <AddInfoLink to=\"review\" state={location.state}>\n                           Reviews\n                        </AddInfoLink>\n                     </AddInfoItem>\n               \n              <Suspense fallback={<Loading />}>\n                <Outlet />\n              </Suspense>\n                    </AddInfo>\n                </div>)}\n                \n        </Container>\n    )\n}\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = '2402629cc235e448b11efcecffc11c17';\nconst params = {\n    trending: 'trending/movie/week',\n    movieID: 'movie/',\n    search: 'search/movie',\n    credits: '/credits',\n    reviews: '/reviews'\n}\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/${params.trending}?api_key=${api_key}`);\n  return response.data;\n  };\n\n\n\nexport async function fetchMovieByID(id) {\n\n  const response = await axios.get(\n    `/movie/${id}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `/${params.search}?api_key=${api_key}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n}\n\n\nexport async function fetchCast(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.credits}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}\n\n\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/${params.movieID}${id}${params.reviews}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","location","useLocation","state","from","Container","Wrapper","InfoWrapper","PosterImg","AddInfoTitle","AddInfo","AddInfoItem","AddInfoLink","NavLink","ErrorTitle","movieId","useParams","useState","movieInfo","setMovieInfo","error","setError","backLinkHref","useEffect","fetchMovieByID","movie","console","log","response","data","status_message","src","poster_path","noPoster","alt","title","release_date","slice","Number","parseInt","vote_average","overview","genres","map","name","join","Suspense","fallback","Loading","axios","api_key","params","fetchTrending","id","fetchMoviesByQuery","query","page","fetchCast","fetchReviews"],"sourceRoot":""}